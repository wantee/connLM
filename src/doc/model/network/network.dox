//
// The MIT License (MIT)
//
// Copyright (c) 2016 Wang Jian
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

/**
 @page model_network The Network

 There is a single output layer with one or more components in a connLM
 network. The topology could be specified by a @c .topo file.

 The output layer is structured as a tree, whose shape could be control by
 constructing method and the parameters.

 The internally structure of each component could be determined by the
 @ref model_network_comp_layer "layers" and
 @ref model_network_comp_glue "glues".

 Finally, connLM toolkit also provide a command tool to draw the network. This
 can give user a intuition of what the network looks like, and be helpful for
 debugging topology file.

 <p>
  - @subpage model_network_output
  - @subpage model_network_topo
  - @subpage model_network_comp
  - @subpage model_network_draw
 </p>

*/
