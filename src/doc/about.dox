//
// The MIT License (MIT)
// 
// Copyright (c) 2015 Wang Jian
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

/**
  @page about About the connLM toolkit

  @section about_what What is connLM?
  
  connLM is a Connectionist Language Modelling Toolkit,
  implementing several neural network based language models.
  connLM is written in C and licensed under the MIT License.

  @section flavor The flavor of connLM

  The code structure and design pattern are mostly inspired by <a href="link=http://kaldi.sourceforge.net/">the Kaldi project</a>.
  Thus we release some easy-to-understand and ready-to-run example scripts 
  along with the codes. Some extra feature of connLM are:

  - We focus connLM on a connectionist language modelling toolkit. 
    - We try to implement as many types of model as we know.
    - We will not try to develop a generic neutral network toolkit.
    - We pay our most attention to the speed of training and testing time
      of the models.

  - We reduce the dependence on other software as much as possible.
    - We write the code with pure C code.
    - We offer every module at least one raw code version, i.e. without any other library, one can run the tools as fast as possible.

*/
